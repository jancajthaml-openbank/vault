#!/bin/bash

set -eu
trap exit INT TERM

dist="packaging/bin"
platforms=("linux")
archs=("amd64 386 arm")

package_service() {
  local arch=${3}
  local plafrom=${2}
  local output=${1}/${platform}-${arch}
  if [ -f ${output} ] ; then
    rm -f ${output}
  fi

  echo "[info] packaging for ${platform}/${arch}"

  case ${arch} in

    arm)
      GOOS=${platform} \
      GOARCH=arm \
      CGO_ENABLED=1 \
      GOHOSTOS=linux \
      CC=arm-linux-gnueabihf-gcc \
      CXX=arm-linux-gnueabihf-g++ \
      \
      go build -a -o ${output} || {
        (>&2 echo "unable to build ${platform}/${arch} distribution")
        exit 1
      }
      ;;

    *)
      GOOS=${platform} \
      GOARCH=${arch} \
      CGO_ENABLED=1 \
      GOHOSTOS=linux \
      \
      go build -a -o ${output} || {
        (>&2 echo "unable to build ${platform}/${arch} distribution")
        exit 1
      }
      ;;

  esac

  chmod +x ${output}
}

while [ $# -gt 0 ] ; do
key="$1"

case $key in

    --target)
      platforms=($(sed "s/,/ /g" <<< "$2"))
      shift
      shift
      ;;

    --arch)
      archs=($(sed "s/,/ /g" <<< "$2"))
      shift
      shift
      ;;

    -o|--output)
      dist="$2"
      shift
      shift
      ;;

    *)
      shift
      ;;

esac
done


echo "[info] cleaning"
go clean

for platform in ${platforms[@]} ; do
  for arch in ${archs[@]} ; do
    package_service ${dist} ${platform} ${arch}
  done
done

if [ ! -f ${dist}/linux-amd64 ] ; then
  (>&2 echo "[error] ${dist}/linux-amd64 not found")
  exit 1
fi

echo "[info] done"
