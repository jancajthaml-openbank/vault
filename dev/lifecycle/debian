#!/bin/bash

set -eu
trap exit INT TERM

VERSION=""
SOURCE=""
TARGET_ARCHITECTURE=""

while [ $# -gt 0 ] ; do
key="$1"

case $key in

  --source)
    SOURCE="$2"
    shift
    shift
  ;;

  --arch)
    TARGET_ARCHITECTURE="$2"
    shift
    shift
  ;;

  --version)
    VERSION="$2"
    shift
    shift
  ;;

  *)
    shift
  ;;

esac
done

if [ -z "${VERSION}" ] ; then
  (>&2 echo "version not provided")
  exit 1
fi

if [ -z "${SOURCE}" ] ; then
  (>&2 echo "source not provided")
  exit 1
fi

if [ -z "${TARGET_ARCHITECTURE}" ] ; then
  (>&2 echo "target architecture not provided (use e.g. --arch amd64)")
  exit 1
fi

DEB_SOURCES="${SOURCE}/debian_${TARGET_ARCHITECTURE}"
BIN_SOURCES="${SOURCE}/bin"

if [ ! -d "${DEB_SOURCES}" ] ; then
  (>&2 echo "packaging for ${TARGET_ARCHITECTURE} is not supported")
  exit 1
fi

if [ ! -f "${BIN_SOURCES}/vault-rest-linux-${TARGET_ARCHITECTURE}" ] ; then
  (>&2 echo "did not found binary to package at ${BIN_SOURCES}/vault-rest-linux-${TARGET_ARCHITECTURE}")
  exit 1
fi

if [ ! -f "${BIN_SOURCES}/vault-unit-linux-${TARGET_ARCHITECTURE}" ] ; then
  (>&2 echo "did not found binary to package at ${BIN_SOURCES}/vault-unit-linux-${TARGET_ARCHITECTURE}")
  exit 1
fi

mkdir -p ${DEB_SOURCES}/usr/bin
if [ -f "${DEB_SOURCES}/usr/bin/vault-rest" ] ; then
  rm -f ${DEB_SOURCES}/usr/bin/vault-rest
fi
if [ -f "${DEB_SOURCES}/usr/bin/vault-unit" ] ; then
  rm -f ${DEB_SOURCES}/usr/bin/vault-unit
fi

generate_manpage() {
  mkdir -p ${DEB_SOURCES}/usr/share/man/man8

  target_unit="${DEB_SOURCES}/usr/share/man/man8/vault-unit.8"
  target_rest="${DEB_SOURCES}/usr/share/man/man8/vault-rest.8"

  if [ -f ${target_unit} ] ; then
    rm -f ${target_unit}
  fi

  if [ -f ${target_unit}.gz ] ; then
    rm -f ${target_unit}.gz
  fi

  if [ -f ${target_rest} ] ; then
    rm -f ${target_rest}
  fi

  if [ -f ${target_rest}.gz ] ; then
    rm -f ${target_rest}.gz
  fi

cat > ${target_unit} <<EOL
.TH VAULT-UNIT 8 2019 "Vault Unit" "OpenBank Account Vault Tenant Unit"
.SH NAME
vault-unit \- starts openbank account vault account unit
.SH DESCRIPTION
The vault unit stores account journal and negotiates account balance blocation
.EE
EOL

cat > ${target_rest} <<EOL
.TH VAULT-REST 8 2019 "Vault REST" "OpenBank Account Vault REST Server"
.SH NAME
vault-rest \- starts openbank account vault REST server
.SH DESCRIPTION
The vault rest provides REST server for accessing and manipulating vault units
.EE
EOL

  cat ${target_unit} | gzip -n -9 > ${target_unit}.gz
  rm ${target_unit}

  cat ${target_rest} | gzip -n -9 > ${target_rest}.gz
  rm ${target_rest}
}

generate_changelog() {
  mkdir -p ${DEB_SOURCES}/usr/share/doc/vault

  target="${DEB_SOURCES}/usr/share/doc/vault/changelog"

  if [ -f ${target} ] ; then
    rm -f ${target}
  fi

  if [ -f ${target}.gz ] ; then
    rm -f ${target}.gz
  fi

  if [ -f ${target}.Debian.gz ] ; then
    rm -f ${target}.Debian.gz
  fi

  touch ${target}

  VER="${VERSION}"
  tag=HEAD
  ADDS=$(echo ${VER} | sed -e 's/~.*//' | cut -s -d- -f2 | sed '/^[[:space:]]*$/d')

  if [[ -z "${ADDS// }" ]] ; then
    DATE=$(date '+%a, %-d %b %Y %H:%M:%S %z')
    echo "vault (${VER}) unstable; urgency=low" >> ${target}
    echo "" >> ${target}
    echo "  * includes non-released commits" >> ${target}
    echo "" >> ${target}
    echo " -- Jan Cajthaml <jan.cajthaml@gmail.com>  ${DATE}" >> ${target}
    echo "" >> ${target}
  fi

  PAIRS=()
  prev_tag=HEAD
  for tag in $(git tag --sort=-v:refname | awk '{arr[i++]=$0} END {while (i>0) print arr[--i] }') ; do
    PAIRS+=("${prev_tag} ${tag}")
    prev_tag=${tag}
  done

  idx=( ${!PAIRS[@]} )
  for ((i=${#idx[@]} - 1; i >= 0; i--)) ; do
    tag_from=${PAIRS[idx[i]]%% *}
    tag_to=${PAIRS[idx[i]]#* }

    DATE=$(git log -1 --format=%cD ${tag_to})

    commits=$(echo "$(git log --no-merges --pretty=oneline --pretty=format:%s ^${tag_from} ${tag_to})" | sed '/^[[:space:]]*$/d' | uniq)

    if [[ -n "${commits// }" ]] ; then

      echo "vault (${tag_to#v}) stable; urgency=low" >> ${target}
      echo "" >> ${target}

      echo "${commits}" | \
      while read note ; do
        echo "  * $(tr '[:lower:]' '[:upper:]' <<< ${note:0:1})${note:1}" >> ${target}
      done

      echo "" >> ${target}

      echo " -- Jan Cajthaml <jan.cajthaml@gmail.com>  ${DATE}" >> ${target}
      echo "" >> ${target}
    fi
  done

  case "${VERSION}" in
    *+*)
      cat ${target} | gzip -n -9 > ${target}.Debian.gz
      ;;
    *)
      cat ${target} | gzip -n -9 > ${target}.gz
      ;;
  esac

  rm ${target}
}

check_files() {
  chmod 0755 "${DEB_SOURCES}/DEBIAN/control"
  chmod 0755 "${DEB_SOURCES}/DEBIAN/postinst"
  chmod 0755 "${DEB_SOURCES}/DEBIAN/postrm"
  chmod 0755 "${DEB_SOURCES}/DEBIAN/preinst"
  chmod 0755 "${DEB_SOURCES}/usr/bin/vault-rest"
  chmod 0755 "${DEB_SOURCES}/usr/bin/vault-unit"
}

################################################################################

cp \
  "${BIN_SOURCES}/vault-rest-linux-${TARGET_ARCHITECTURE}" \
  "${DEB_SOURCES}/usr/bin/vault-rest"
cp \
  "${BIN_SOURCES}/vault-unit-linux-${TARGET_ARCHITECTURE}" \
  "${DEB_SOURCES}/usr/bin/vault-unit"

generate_changelog
generate_manpage

sed -i 's/Version.*/Version: '${VERSION#v}'/' "${DEB_SOURCES}/DEBIAN/control"

find "${BIN_SOURCES}" -name "vault_*_${TARGET_ARCHITECTURE}.deb" -exec rm -f {} \;

check_files

dpkg-deb --build "${DEB_SOURCES}" "${BIN_SOURCES}"

find "${BIN_SOURCES}" -name "vault_*_${TARGET_ARCHITECTURE}.deb" -exec fakeroot lintian --pedantic {} \;
find "${BIN_SOURCES}" -name "vault_*_${TARGET_ARCHITECTURE}.deb" -exec du -hs {} \;

exit 0
